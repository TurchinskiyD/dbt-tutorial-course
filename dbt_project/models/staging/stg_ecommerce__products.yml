models:
  - name: stg_ecommerce__products
    description: "Table containing product details from the ecommerce dataset."
    columns:
      - name: product_id
        description: "Unique identifier for the product"
        tests:
          - not_null:
              severity: error
          - unique:
              severity: error

      - name: cost
        description: "How much the product costs to the company"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
              severity: warn

      - name: retail_price
        description: "How much the product costs to the customer"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
              severity: warn
          - dbt_utils.expression_is_true:
              name: retail_price_greater_than_cost
              expression: "> cost"
              where: "retail_price IS NOT NULL AND cost IS NOT NULL"

      - name: department
        description: "Where the item is Menswear, Womenswear, etc."
        tests:
          -  not_null
          - accepted_values:
              values:
                - "Men"
                # - "Women"
              # quote defaults to true, but this just shows how you could set it to
              # false if you wanted to have non-string values (e.g. numbers or a TRUE/FALSE column)
              quote: true
              severity: error
              warn_if: '>1'
              error_if: '>2'
